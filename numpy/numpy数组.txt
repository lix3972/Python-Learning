一、数组的初始化和基本操作
https://www.cnblogs.com/saryli/p/8607630.html
1、属性：
ndarray.ndim：数组的维数 
ndarray.shape：数组每一维的大小 
ndarray.size：数组中全部元素的数量 
ndarray.dtype：数组中元素的类型（numpy.int32, numpy.int16, and numpy.float64等） 
ndarray.itemsize：每个元素占几个字节
2、创建数组
import numpy as np
a = np.array([2,3,4])
a.dtype
c = np.array( [ [1,2], [3,4] ], dtype=complex )
np.zeros( (3,4) )
np.ones( (2,3,4), dtype=np.int16 )
np.empty( (2,3) )  随机数，取决于内存情况
np.arange( 0, 2, 0.3 ) 
np.linspace( 0, 2, 9 )
3、基本运算
b**2
10*np.sin(a)
a<35
两个二维使用*符号仍然是按位置一对一相乘，如果想表示矩阵乘法，使用dot：A.dot(B)，np.dot(A, B) 
内置函数（min,max,sum)，同时可以使用axis指定对哪一维进行操作，
b = np.arange(12).reshape(3,4)
b.sum(axis=0)
b.min(axis=1) 
b.cumsum(axis=1)  
全局函数np.exp(B)，np.sqrt(B)，np.add(B, C)
4、寻址，索引和遍历
a = np.arange(10)**3
a[2:5]
a[:6:2] # equivalent to a[0:6:2] = -1000
a[ : :-1]   # reversed a
for i in a: ……
def f(x,y):return 10*x+y
b = np.fromfunction(f,(5,4),dtype=int)
b[0:5, 1]  
b[ : ,1] 
b[1:3, : ]
b[-1] 
c[1,...]   # same as c[1,:,:] or c[1]
c[...,2]   # same as c[:,:,2]
只想遍历整个array
for row in b:……
对每个元素进行操作，就要使用flat属性，这是一个遍历整个数组的迭代器
for element in b.flat:……
二、对numpy中的数组条件筛选功能详解
https://www.jb51.net/article/142982.htm
1，唯一化的实现：np.unique(data) 通过unique可以实现数组的唯一化，并且，唯一化后的返回值会进行排序。
2，交集的实现
np.intersect1d(data1,data2)返回值会进行排序
并集计算np.union1d(data1,data2)
3，子集判断
np.in1d(data1,data2)
4，差异判断
4.1，集合差判断
np.setdiff1d(data1,data2)
setdiff1d可以求解出存在于第一个集合但是并不存在于第二个集合中的元素。返回值是一个数组集合。
4.1 数组“异或”求解
np.setxor1d(data1,data2)
setxor1d用于求解不同时存在于两个数组中的元素，并返回一个数组集合。两个参数的顺序变化不会改变求解的结果。返回的结果是是一个有序的数组序列。
三、数组的组合和分割
https://blog.csdn.net/qq_43287650/article/details/83211898
数组的组合主要有：
1.水平组合：np.hstack(arr1,arr2) 或 concatenate(arr1,arr2,axis=1)
2.垂直组合：np.vstack(arr1,arr2) 或 concatenate(arr1,arr2,axis=0)
3.深度组合：np.dstack(arr1,arr2)
4.列组合：np.column_stack(arr1,arr2)
5.行组合：np.row_stack(arr1,arr2)

数组的分割主要有：
1.水平分割：np.split(arr,n,axis=1) 或 np.hsplit(arr,n)
2.垂直分割：np.split(arr,n,axis=0) 或 np.vsplit(arr,n)
3.深度分割：np.dsplit(arr,n)

