https://www.jianshu.com/p/13e31d619c15  

orchvision.transforms是pytorch中的图像预处理包  
一般用Compose把多个步骤整合到一起：  
比如说transforms.Compose([transforms.CenterCrop(10),transforms.ToTensor(),])这样就把两个步骤整合到一起   
接下来介绍transforms中的函数  
Resize：把给定的图片resize到given size  
Normalize：Normalized an tensor image with mean and standard deviation  
ToTensor：convert a PIL image to tensor (H*W*C) in range [0,255] to a torch.Tensor(C*H*W) in the range [0.0,1.0]  
ToPILImage: convert a tensor to PIL image  
Scale：目前已经不用了，推荐用Resize  
CenterCrop：在图片的中间区域进行裁剪  
RandomCrop：在一个随机的位置进行裁剪  
RandomHorizontalFlip：以0.5的概率水平翻转给定的PIL图像  
RandomVerticalFlip：以0.5的概率竖直翻转给定的PIL图像  
RandomResizedCrop：将PIL图像裁剪成任意大小和纵横比  
Grayscale：将图像转换为灰度图像  
RandomGrayscale：将图像以一定的概率转换为灰度图像  
FiceCrop：把图像裁剪为四个角和一个中心  
TenCrop  
Pad：填充  
ColorJitter：随机改变图像的亮度对比度和饱和度

作者：sponge不是死胖子
链接：https://www.jianshu.com/p/13e31d619c15
來源：简书
简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。
================================================================
https://pytorch-cn.readthedocs.io/zh/latest/torchvision/torchvision-transform/
Conversion Transforms
class torchvision.transforms.ToTensor

把一个取值范围是[0,255]的PIL.Image或者shape为(H,W,C)的numpy.ndarray，转换成形状为[C,H,W]，取值范围是[0,1.0]的torch.FloadTensor

data = np.random.randint(0, 255, size=300)
img = data.reshape(10,10,3)
print(img.shape)
img_tensor = transforms.ToTensor()(img) # 转换成tensor
print(img_tensor)

-------------------------------------------------
# 关于通道数为1的图片的transforms.Normalize
# 示例：transforms.Normalize([a,b,c],[d,e,f])
# [a,b,c] 对应均值mean, a,b,c分别对应图像的三个通道，如果只有一个通道的灰度图像，只需要一个参数a
# [d,e,f] 对应标准差std，a,b,c分别对应图像的三个通道，如果只有一个通道的灰度图像，只需要一个参数d

import torch
import torch.nn as nn
from torchvision import datasets, transforms
from global_varialbe import *

bg = torch.zeros((10, 10), dtype=torch.float)
fg = torch.ones(4, 4)
com = bg
com[3:7, 3:7] = fg
mask = com
mask.requires_grad_(True)
# mask_img = transforms.ToPILImage(mask)

mask_norm = transforms.Normalize([0.5], [0.5])(mask.unsqueeze(0))
a = mask.unique()
b = mask_norm.unique()
print('ok')

class torchvision.transforms.ToPILImage

将shape为(C,H,W)的Tensor或shape为(H,W,C)的numpy.ndarray转换成PIL.Image，值不变。
通用变换
class torchvision.transforms.Lambda(lambd)

使用lambd作为转换器。
